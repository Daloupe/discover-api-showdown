@page "/fetchdata"

@using User.Data
@inject ItemLineService ItemLineService

User Id <input style="display: inline; width: 200px;" readonly value=@userId />

@if (itemLines == null)
{
    <p><em>Loading Items</em></p>
}
else
{
    <div class="grid-container-2">
        <div>
            <table class="table">
                <thead>
                    <tr>
                        <th class="item-name">Name</th>
                        <th class="item-price">Price</th>
                        <th class="action-button">Add</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var itemLine in itemLines.Where(x => x.IsClaimed == ItemLine.NO))
                    {
                        <tr>
                            <td>@itemLine.Name</td>
                            <td class="item-price">@itemLine.Price</td>
                            <td class="action-button" @onclick="@(() => ClaimItemLine(itemLine))">+</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div>
            <table class="table">
                <thead>
                    <tr>
                        <th class="item-name">Name</th>
                        <th class="item-price">Price</th>
                        <th class="action-button">Remove</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var itemLine in itemLines.Where(x => x.IsClaimed == ItemLine.YES))
                    {
                        <tr>
                            <td class="item-name">@itemLine.Name</td>
                            <td class="item-price">@itemLine.Price</td>
                            @if (itemLine.ClaimerId == userId)
                            {
                                <td class="action-button" @onclick="@(() => UnclaimItemLine(itemLine))">-</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code
{
    Guid userId;
    ItemLine[] itemLines;

    protected override async Task OnInitializedAsync()
    {
        userId = Guid.NewGuid();
        itemLines = await ItemLineService.GetItemLines(Guid.Empty);
    }

    protected async Task ClaimItemLine(ItemLine itemLine)
    {
        itemLines = await ItemLineService.ClaimItemLine(userId, itemLine.ItemId);
    }

    protected async Task UnclaimItemLine(ItemLine itemLine)
    {
        itemLines = await ItemLineService.UnclaimItemLine(itemLine.ItemId);
    }
}
